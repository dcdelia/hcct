%!PS-Adobe-2.0 EPSF-2.0
%%Title: cumulative.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Sun Oct 31 20:46:18 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (cumulative.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (demetres)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct 31 20:46:18 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 576 M
5993 0 V
stroke
LTb
882 576 M
63 0 V
5930 0 R
-63 0 V
stroke
774 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 968 M
5993 0 V
stroke
LTb
882 968 M
63 0 V
5930 0 R
-63 0 V
stroke
774 968 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 1361 M
5993 0 V
stroke
LTb
882 1361 M
63 0 V
5930 0 R
-63 0 V
stroke
774 1361 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 1753 M
5993 0 V
stroke
LTb
882 1753 M
63 0 V
5930 0 R
-63 0 V
stroke
774 1753 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 2145 M
5993 0 V
stroke
LTb
882 2145 M
63 0 V
5930 0 R
-63 0 V
stroke
774 2145 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 2538 M
5993 0 V
stroke
LTb
882 2538 M
63 0 V
5930 0 R
-63 0 V
stroke
774 2538 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 2930 M
5993 0 V
stroke
LTb
882 2930 M
63 0 V
5930 0 R
-63 0 V
stroke
774 2930 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 3322 M
5993 0 V
stroke
LTb
882 3322 M
63 0 V
5930 0 R
-63 0 V
stroke
774 3322 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 70)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 3714 M
2690 0 V
3195 0 R
108 0 V
stroke
LTb
882 3714 M
63 0 V
5930 0 R
-63 0 V
stroke
774 3714 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 4107 M
2690 0 V
3195 0 R
108 0 V
stroke
LTb
882 4107 M
63 0 V
5930 0 R
-63 0 V
stroke
774 4107 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 90)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 4499 M
5993 0 V
stroke
LTb
882 4499 M
63 0 V
5930 0 R
-63 0 V
stroke
774 4499 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
882 576 M
0 3923 V
stroke
LTb
882 576 M
0 63 V
0 3860 R
0 -63 V
stroke
882 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
1481 576 M
0 3923 V
stroke
LTb
1481 576 M
0 63 V
0 3860 R
0 -63 V
stroke
1481 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
2081 576 M
0 3923 V
stroke
LTb
2081 576 M
0 63 V
0 3860 R
0 -63 V
stroke
2081 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
2680 576 M
0 3923 V
stroke
LTb
2680 576 M
0 63 V
0 3860 R
0 -63 V
stroke
2680 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
3279 576 M
0 3923 V
stroke
LTb
3279 576 M
0 63 V
0 3860 R
0 -63 V
stroke
3279 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
3879 576 M
0 2780 V
0 1080 R
0 63 V
stroke
LTb
3879 576 M
0 63 V
0 3860 R
0 -63 V
stroke
3879 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
4478 576 M
0 2780 V
0 1080 R
0 63 V
stroke
LTb
4478 576 M
0 63 V
0 3860 R
0 -63 V
stroke
4478 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 60)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
5077 576 M
0 2780 V
0 1080 R
0 63 V
stroke
LTb
5077 576 M
0 63 V
0 3860 R
0 -63 V
stroke
5077 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 70)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
5676 576 M
0 2780 V
0 1080 R
0 63 V
stroke
LTb
5676 576 M
0 63 V
0 3860 R
0 -63 V
stroke
5676 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 80)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
6276 576 M
0 2780 V
0 1080 R
0 63 V
stroke
LTb
6276 576 M
0 63 V
0 3860 R
0 -63 V
stroke
6276 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 90)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
6875 576 M
0 3923 V
stroke
LTb
6875 576 M
0 63 V
0 3860 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4499 N
882 576 L
5993 0 V
0 3923 V
-5993 0 V
Z stroke
LCb setrgbcolor
144 2537 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (cumulative frequency relative to total number of calls)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
3878 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (% of hot contexts sorted by rank)]
] -60.0 MCshow
LTb
3878 4769 M
[ [(Helvetica) 180.0 0.0 true true 0 (cumulative frequency distributions)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6056 4346 M
[ [(Helvetica) 180.0 0.0 true true 0 (audacity)]
] -60.0 MRshow
LT0
6164 4346 M
495 0 V
882 676 M
0 180 V
0 193 V
0 402 V
1 149 V
0 369 V
1 348 V
3 373 V
6 413 V
9 275 V
14 232 V
21 180 V
33 144 V
64 134 V
97 104 V
166 88 V
297 78 V
439 55 V
522 35 V
1325 42 V
1527 20 V
1468 9 V
882 676 Pls
882 856 Pls
882 1049 Pls
882 1451 Pls
883 1600 Pls
883 1969 Pls
884 2317 Pls
887 2690 Pls
893 3103 Pls
902 3378 Pls
916 3610 Pls
937 3790 Pls
970 3934 Pls
1034 4068 Pls
1131 4172 Pls
1297 4260 Pls
1594 4338 Pls
2033 4393 Pls
2555 4428 Pls
3880 4470 Pls
5407 4490 Pls
6875 4499 Pls
6411 4346 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LCb setrgbcolor
6056 4166 M
[ [(Helvetica) 180.0 0.0 true true 0 (audacity \(startup only\))]
] -60.0 MRshow
LT1
6164 4166 M
495 0 V
882 645 M
0 45 V
0 137 V
0 141 V
1 226 V
0 217 V
1 288 V
2 148 V
4 242 V
6 193 V
21 289 V
44 298 V
92 328 V
229 408 V
286 257 V
392 183 V
963 217 V
1522 138 V
2430 99 V
882 645 Crs
882 690 Crs
882 827 Crs
882 968 Crs
883 1194 Crs
883 1411 Crs
884 1699 Crs
886 1847 Crs
890 2089 Crs
896 2282 Crs
917 2571 Crs
961 2869 Crs
1053 3197 Crs
1282 3605 Crs
1568 3862 Crs
1960 4045 Crs
2923 4262 Crs
4445 4400 Crs
6875 4499 Crs
6411 4166 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LCb setrgbcolor
6056 3986 M
[ [(Helvetica) 180.0 0.0 true true 0 (bzip2)]
] -60.0 MRshow
LT2
6164 3986 M
495 0 V
896 3944 M
15 76 V
35 95 V
164 298 V
114 64 V
21 8 V
51 8 V
7 1 V
21 0 V
36 1 V
71 1 V
185 1 V
207 1 V
220 0 V
763 0 V
905 1 V
3164 0 V
896 3944 Star
896 3944 Star
896 3944 Star
896 3944 Star
896 3944 Star
911 4020 Star
946 4115 Star
1110 4413 Star
1224 4477 Star
1245 4485 Star
1296 4493 Star
1303 4494 Star
1324 4494 Star
1360 4495 Star
1431 4496 Star
1616 4497 Star
1823 4498 Star
2043 4498 Star
2806 4498 Star
3711 4499 Star
6875 4499 Star
6411 3986 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
LCb setrgbcolor
6056 3806 M
[ [(Helvetica) 180.0 0.0 true true 0 (gimp)]
] -60.0 MRshow
LT3
6164 3806 M
495 0 V
882 650 M
0 32 V
0 60 V
0 9 V
0 26 V
0 78 V
0 85 V
0 120 V
0 181 V
1 278 V
1 288 V
3 316 V
5 356 V
12 393 V
18 302 V
32 249 V
65 250 V
120 243 V
149 154 V
275 137 V
428 105 V
473 61 V
1119 68 V
1479 38 V
1813 20 V
882 650 Box
882 682 Box
882 742 Box
882 751 Box
882 777 Box
882 855 Box
882 940 Box
882 1060 Box
882 1241 Box
883 1519 Box
884 1807 Box
887 2123 Box
892 2479 Box
904 2872 Box
922 3174 Box
954 3423 Box
1019 3673 Box
1139 3916 Box
1288 4070 Box
1563 4207 Box
1991 4312 Box
2464 4373 Box
3583 4441 Box
5062 4479 Box
6875 4499 Box
6411 3806 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
LCb setrgbcolor
6056 3626 M
[ [(Helvetica) 180.0 0.0 true true 0 (gnome-dictionary)]
] -60.0 MRshow
LT4
6164 3626 M
495 0 V
882 608 M
0 63 V
0 176 V
1 219 V
1 422 V
3 346 V
8 515 V
6 221 V
12 216 V
35 290 V
65 270 V
127 282 V
262 288 V
359 192 V
406 115 V
1110 140 V
1641 89 V
1957 47 V
882 608 BoxF
882 671 BoxF
882 847 BoxF
883 1066 BoxF
884 1488 BoxF
887 1834 BoxF
895 2349 BoxF
901 2570 BoxF
913 2786 BoxF
948 3076 BoxF
1013 3346 BoxF
1140 3628 BoxF
1402 3916 BoxF
1761 4108 BoxF
2167 4223 BoxF
3277 4363 BoxF
4918 4452 BoxF
6875 4499 BoxF
6411 3626 BoxF
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LT5
LCb setrgbcolor
6056 3446 M
[ [(Helvetica) 180.0 0.0 true true 0 (inkscape)]
] -60.0 MRshow
LT5
6164 3446 M
495 0 V
882 652 M
0 34 V
0 820 V
0 588 V
0 256 V
1 204 V
0 222 V
0 290 V
1 283 V
3 207 V
2 124 V
4 125 V
9 122 V
18 122 V
27 88 V
43 74 V
99 88 V
144 61 V
218 46 V
367 37 V
467 23 V
410 11 V
875 11 V
1278 6 V
2027 5 V
882 652 Circle
882 686 Circle
882 1506 Circle
882 2094 Circle
882 2350 Circle
883 2554 Circle
883 2776 Circle
883 3066 Circle
884 3349 Circle
887 3556 Circle
889 3680 Circle
893 3805 Circle
902 3927 Circle
920 4049 Circle
947 4137 Circle
990 4211 Circle
1089 4299 Circle
1233 4360 Circle
1451 4406 Circle
1818 4443 Circle
2285 4466 Circle
2695 4477 Circle
3570 4488 Circle
4848 4494 Circle
6875 4499 Circle
6411 3446 Circle
% End plot #6
1.000 UL
LTb
882 4499 N
882 576 L
5993 0 V
0 3923 V
-5993 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
