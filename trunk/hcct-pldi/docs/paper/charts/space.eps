%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 51 136 406 213
%%HiResBoundingBox: 51.300000 136.100000 405.200000 212.900000
%%Title: ../../docs/paper/charts/space.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Thu Mar 17 18:45:39 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -26 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../docs/paper/charts/space.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (demetres)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Mar 17 18:45:39 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 80 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
472 2176 M
5368 0 V
stroke
LTb
472 2176 M
63 0 V
5305 0 R
-63 0 V
stroke
424 2176 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 0.1)]
] -26.7 MRshow
1.000 UL
LTb
472 2269 M
31 0 V
5337 0 R
-31 0 V
472 2324 M
31 0 V
5337 0 R
-31 0 V
472 2362 M
31 0 V
5337 0 R
-31 0 V
472 2392 M
31 0 V
5337 0 R
-31 0 V
472 2417 M
31 0 V
5337 0 R
-31 0 V
472 2437 M
31 0 V
5337 0 R
-31 0 V
472 2455 M
31 0 V
5337 0 R
-31 0 V
472 2471 M
31 0 V
5337 0 R
-31 0 V
stroke
LTa
472 2485 M
5368 0 V
stroke
LTb
472 2485 M
63 0 V
5305 0 R
-63 0 V
stroke
424 2485 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 1)]
] -26.7 MRshow
1.000 UL
LTb
472 2578 M
31 0 V
5337 0 R
-31 0 V
472 2633 M
31 0 V
5337 0 R
-31 0 V
472 2672 M
31 0 V
5337 0 R
-31 0 V
472 2702 M
31 0 V
5337 0 R
-31 0 V
472 2726 M
31 0 V
5337 0 R
-31 0 V
472 2747 M
31 0 V
5337 0 R
-31 0 V
472 2765 M
31 0 V
5337 0 R
-31 0 V
472 2781 M
31 0 V
5337 0 R
-31 0 V
stroke
LTa
472 2795 M
5368 0 V
stroke
LTb
472 2795 M
63 0 V
5305 0 R
-63 0 V
stroke
424 2795 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 10)]
] -26.7 MRshow
1.000 UL
LTb
472 2888 M
31 0 V
5337 0 R
-31 0 V
472 2942 M
31 0 V
5337 0 R
-31 0 V
472 2981 M
31 0 V
5337 0 R
-31 0 V
472 3011 M
31 0 V
5337 0 R
-31 0 V
472 3035 M
31 0 V
5337 0 R
-31 0 V
472 3056 M
31 0 V
5337 0 R
-31 0 V
472 3074 M
31 0 V
5337 0 R
-31 0 V
472 3090 M
31 0 V
5337 0 R
-31 0 V
stroke
LTa
472 3104 M
5368 0 V
stroke
LTb
472 3104 M
63 0 V
5305 0 R
-63 0 V
stroke
424 3104 M
[ [(Helvetica) 80.0 0.0 true true 0 ( 100)]
] -26.7 MRshow
1.000 UL
LTb
755 2176 M
0 928 R
stroke
755 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (amarok)]
] -26.7 MLshow
grestore
1.000 UL
LTb
1037 2176 M
0 928 R
stroke
1037 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (ark)]
] -26.7 MLshow
grestore
1.000 UL
LTb
1320 2176 M
0 928 R
stroke
1320 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (audacity)]
] -26.7 MLshow
grestore
1.000 UL
LTb
1602 2176 M
0 928 R
stroke
1602 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (bluefish)]
] -26.7 MLshow
grestore
1.000 UL
LTb
1885 2176 M
0 928 R
stroke
1885 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (dolphin)]
] -26.7 MLshow
grestore
1.000 UL
LTb
2167 2176 M
0 928 R
stroke
2167 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (firefox)]
] -26.7 MLshow
grestore
1.000 UL
LTb
2450 2176 M
0 928 R
stroke
2450 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (gedit)]
] -26.7 MLshow
grestore
1.000 UL
LTb
2732 2176 M
0 928 R
stroke
2732 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (ghex2)]
] -26.7 MLshow
grestore
1.000 UL
LTb
3015 2176 M
0 928 R
stroke
3015 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (gimp)]
] -26.7 MLshow
grestore
1.000 UL
LTb
3297 2176 M
0 928 R
stroke
3297 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (sudoku)]
] -26.7 MLshow
grestore
1.000 UL
LTb
3580 2176 M
0 928 R
stroke
3580 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (gwenview)]
] -26.7 MLshow
grestore
1.000 UL
LTb
3862 2176 M
0 928 R
stroke
3862 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (inkscape)]
] -26.7 MLshow
grestore
1.000 UL
LTb
4145 2176 M
0 928 R
stroke
4145 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (oocalc)]
] -26.7 MLshow
grestore
1.000 UL
LTb
4427 2176 M
0 928 R
stroke
4427 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (ooimpress)]
] -26.7 MLshow
grestore
1.000 UL
LTb
4710 2176 M
0 928 R
stroke
4710 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (oowriter)]
] -26.7 MLshow
grestore
1.000 UL
LTb
4992 2176 M
0 928 R
stroke
4992 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (pidgin)]
] -26.7 MLshow
grestore
1.000 UL
LTb
5275 2176 M
0 928 R
stroke
5275 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (quanta)]
] -26.7 MLshow
grestore
1.000 UL
LTb
5557 2176 M
0 928 R
stroke
5557 2128 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (vlc)]
] -26.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
472 3104 N
0 -928 V
5368 0 V
0 928 V
-5368 0 V
Z stroke
LCb setrgbcolor
64 2640 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (Virtual memory peak)]
] -26.7 MCshow
grestore
144 2640 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 80.0 0.0 true true 0 (\(% of full CCT\))]
] -26.7 MCshow
grestore
LTb
LCb setrgbcolor
3156 1751 M
[ [(Helvetica) 80.0 0.0 true true 0 (Benchmarks)]
] -26.7 MCshow
LTb
3156 3224 M
[ [(Helvetica) 80.0 0.0 true true 0 (Space comparison with full CCT)]
] -26.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
6800 3064 M
[ [(Helvetica) 80.0 0.0 true true 0 (LSS + static burst)]
] -26.7 MRshow
LT0
1.00 0.00 0.00 C 1.000 6848 3044 255 40 BoxColFill
1.000 666 2176 37 243 BoxColFill
1.000 949 2176 36 301 BoxColFill
1.000 1231 2176 37 237 BoxColFill
1.000 1514 2176 36 317 BoxColFill
1.000 1796 2176 37 253 BoxColFill
1.000 2079 2176 36 159 BoxColFill
1.000 2361 2176 37 391 BoxColFill
1.000 2644 2176 36 500 BoxColFill
1.000 2926 2176 37 158 BoxColFill
1.000 3209 2176 36 446 BoxColFill
1.000 3492 2176 36 274 BoxColFill
1.000 3774 2176 36 242 BoxColFill
1.000 4057 2176 36 75 BoxColFill
1.000 4339 2176 36 90 BoxColFill
1.000 4622 2176 36 96 BoxColFill
1.000 4904 2176 36 277 BoxColFill
1.000 5187 2176 36 151 BoxColFill
1.000 5469 2176 37 423 BoxColFill
% End plot #1
% Begin plot #2
2.000 UL
LT1
0.00 0.00 1.00 C LCb setrgbcolor
6800 2984 M
[ [(Helvetica) 80.0 0.0 true true 0 (LSS)]
] -26.7 MRshow
LT1
0.00 0.00 1.00 C 1.000 6848 2964 255 40 BoxColFill
1.000 702 2176 36 243 BoxColFill
1.000 984 2176 36 314 BoxColFill
1.000 1267 2176 36 250 BoxColFill
1.000 1549 2176 36 329 BoxColFill
1.000 1832 2176 36 266 BoxColFill
1.000 2114 2176 37 159 BoxColFill
1.000 2397 2176 36 404 BoxColFill
1.000 2679 2176 37 500 BoxColFill
1.000 2962 2176 36 169 BoxColFill
1.000 3244 2176 37 458 BoxColFill
1.000 3527 2176 36 287 BoxColFill
1.000 3809 2176 37 242 BoxColFill
1.000 4092 2176 36 75 BoxColFill
1.000 4374 2176 37 90 BoxColFill
1.000 4657 2176 36 96 BoxColFill
1.000 4939 2176 37 277 BoxColFill
1.000 5222 2176 36 151 BoxColFill
1.000 5505 2176 36 436 BoxColFill
% End plot #2
% Begin plot #3
2.000 UL
LT2
1.00 0.00 1.00 C LCb setrgbcolor
6800 2904 M
[ [(Helvetica) 80.0 0.0 true true 0 (BSS)]
] -26.7 MRshow
LT2
1.00 0.00 1.00 C 1.000 6848 2884 255 40 BoxColFill
1.000 737 2176 36 273 BoxColFill
1.000 1019 2176 37 334 BoxColFill
1.000 1302 2176 36 281 BoxColFill
1.000 1584 2176 37 350 BoxColFill
1.000 1867 2176 36 296 BoxColFill
1.000 2150 2176 36 186 BoxColFill
1.000 2432 2176 36 424 BoxColFill
1.000 2715 2176 36 533 BoxColFill
1.000 2997 2176 36 188 BoxColFill
1.000 3280 2176 36 478 BoxColFill
1.000 3562 2176 36 307 BoxColFill
1.000 3845 2176 36 272 BoxColFill
1.000 4127 2176 37 95 BoxColFill
1.000 4410 2176 36 120 BoxColFill
1.000 4692 2176 37 126 BoxColFill
1.000 4975 2176 36 307 BoxColFill
1.000 5257 2176 37 182 BoxColFill
1.000 5540 2176 36 456 BoxColFill
% End plot #3
% Begin plot #4
2.000 UL
LT3
0.00 1.00 0.50 C LCb setrgbcolor
6800 2824 M
[ [(Helvetica) 80.0 0.0 true true 0 (LC + static burst)]
] -26.7 MRshow
LT3
0.00 1.00 0.50 C 1.000 6848 2804 255 40 BoxColFill
1.000 772 2176 37 286 BoxColFill
1.000 1055 2176 36 323 BoxColFill
1.000 1337 2176 37 271 BoxColFill
1.000 1620 2176 36 351 BoxColFill
1.000 1902 2176 37 308 BoxColFill
1.000 2185 2176 36 206 BoxColFill
1.000 2467 2176 37 436 BoxColFill
1.000 2750 2176 36 522 BoxColFill
1.000 3032 2176 37 226 BoxColFill
1.000 3315 2176 36 468 BoxColFill
1.000 3597 2176 37 319 BoxColFill
1.000 3880 2176 36 302 BoxColFill
1.000 4163 2176 36 143 BoxColFill
1.000 4445 2176 36 150 BoxColFill
1.000 4728 2176 36 147 BoxColFill
1.000 5010 2176 36 309 BoxColFill
1.000 5293 2176 36 202 BoxColFill
1.000 5575 2176 36 433 BoxColFill
% End plot #4
% Begin plot #5
2.000 UL
LT4
0.00 0.81 0.82 C LCb setrgbcolor
6800 2744 M
[ [(Helvetica) 80.0 0.0 true true 0 (LC)]
] -26.7 MRshow
LT4
0.00 0.81 0.82 C 1.000 6848 2724 255 40 BoxColFill
1.000 808 2176 36 312 BoxColFill
1.000 1090 2176 36 390 BoxColFill
1.000 1373 2176 36 326 BoxColFill
1.000 1655 2176 36 405 BoxColFill
1.000 1938 2176 36 349 BoxColFill
1.000 2220 2176 36 234 BoxColFill
1.000 2503 2176 36 500 BoxColFill
1.000 2785 2176 37 564 BoxColFill
1.000 3068 2176 36 266 BoxColFill
1.000 3350 2176 37 526 BoxColFill
1.000 3633 2176 36 363 BoxColFill
1.000 3915 2176 37 339 BoxColFill
1.000 4198 2176 36 171 BoxColFill
1.000 4480 2176 37 187 BoxColFill
1.000 4763 2176 36 210 BoxColFill
1.000 5045 2176 37 353 BoxColFill
1.000 5328 2176 36 241 BoxColFill
1.000 5610 2176 37 496 BoxColFill
% End plot #5
% Begin plot #6
2.000 UL
LT5
1.00 0.50 0.31 C LCb setrgbcolor
6800 2664 M
[ [(Helvetica) 80.0 0.0 true true 0 (static burst)]
] -26.7 MRshow
LT5
1.00 0.50 0.31 C 1.000 6848 2644 255 40 BoxColFill
1.000 843 2176 36 700 BoxColFill
1.000 1125 2176 37 722 BoxColFill
1.000 1408 2176 36 737 BoxColFill
1.000 1690 2176 37 770 BoxColFill
1.000 1973 2176 36 772 BoxColFill
1.000 2255 2176 37 765 BoxColFill
1.000 2538 2176 36 800 BoxColFill
1.000 2821 2176 36 801 BoxColFill
1.000 3103 2176 36 750 BoxColFill
1.000 3386 2176 36 770 BoxColFill
1.000 3668 2176 36 747 BoxColFill
1.000 3951 2176 36 783 BoxColFill
1.000 4233 2176 36 724 BoxColFill
1.000 4516 2176 36 753 BoxColFill
1.000 4798 2176 37 737 BoxColFill
1.000 5081 2176 36 791 BoxColFill
1.000 5363 2176 37 738 BoxColFill
1.000 5646 2176 36 728 BoxColFill
% End plot #6
1.000 UL
LTb
472 3104 N
0 -928 V
5368 0 V
0 928 V
-5368 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
