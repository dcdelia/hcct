%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../../docs/paper/charts/mintau.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Sat Mar 12 19:21:19 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (../../docs/paper/charts/mintau.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (demetres)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Mar 12 19:21:19 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1206 576 M
5669 0 V
stroke
LTb
1206 576 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-06)]
] -60.0 MRshow
1.000 UL
LTb
1206 773 M
31 0 V
5638 0 R
-31 0 V
1206 1033 M
31 0 V
5638 0 R
-31 0 V
1206 1166 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 1230 M
5669 0 V
stroke
LTb
1206 1230 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 1230 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-05)]
] -60.0 MRshow
1.000 UL
LTb
1206 1427 M
31 0 V
5638 0 R
-31 0 V
1206 1687 M
31 0 V
5638 0 R
-31 0 V
1206 1820 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 1884 M
5669 0 V
stroke
LTb
1206 1884 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 1884 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.0001)]
] -60.0 MRshow
1.000 UL
LTb
1206 2080 M
31 0 V
5638 0 R
-31 0 V
1206 2341 M
31 0 V
5638 0 R
-31 0 V
1206 2474 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 2538 M
5669 0 V
stroke
LTb
1206 2538 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 2538 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.001)]
] -60.0 MRshow
1.000 UL
LTb
1206 2734 M
31 0 V
5638 0 R
-31 0 V
1206 2995 M
31 0 V
5638 0 R
-31 0 V
1206 3128 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 3191 M
5669 0 V
stroke
LTb
1206 3191 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 3191 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.01)]
] -60.0 MRshow
1.000 UL
LTb
1206 3388 M
31 0 V
5638 0 R
-31 0 V
1206 3648 M
31 0 V
5638 0 R
-31 0 V
1206 3782 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 3845 M
108 0 V
1791 0 R
3770 0 V
stroke
LTb
1206 3845 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 3845 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MRshow
1.000 UL
LTb
1206 4042 M
31 0 V
5638 0 R
-31 0 V
1206 4302 M
31 0 V
5638 0 R
-31 0 V
1206 4436 M
31 0 V
5638 0 R
-31 0 V
stroke
LTa
1206 4499 M
5669 0 V
stroke
LTb
1206 4499 M
63 0 V
5606 0 R
-63 0 V
stroke
1098 4499 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
1206 576 M
0 3923 V
stroke
LTb
1206 576 M
0 63 V
0 3860 R
0 -63 V
stroke
1206 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-09)]
] -60.0 MCshow
1.000 UL
LTb
1490 576 M
0 31 V
0 3892 R
0 -31 V
1866 576 M
0 31 V
0 3892 R
0 -31 V
2059 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
2151 576 M
0 2960 V
0 900 R
0 63 V
stroke
LTb
2151 576 M
0 63 V
0 3860 R
0 -63 V
stroke
2151 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-08)]
] -60.0 MCshow
1.000 UL
LTb
2435 576 M
0 31 V
0 3892 R
0 -31 V
2811 576 M
0 31 V
0 3892 R
0 -31 V
3004 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
3096 576 M
0 2960 V
0 900 R
0 63 V
stroke
LTb
3096 576 M
0 63 V
0 3860 R
0 -63 V
stroke
3096 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-07)]
] -60.0 MCshow
1.000 UL
LTb
3380 576 M
0 31 V
0 3892 R
0 -31 V
3756 576 M
0 31 V
0 3892 R
0 -31 V
3949 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
4041 576 M
0 3923 V
stroke
LTb
4041 576 M
0 63 V
0 3860 R
0 -63 V
stroke
4041 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-06)]
] -60.0 MCshow
1.000 UL
LTb
4325 576 M
0 31 V
0 3892 R
0 -31 V
4701 576 M
0 31 V
0 3892 R
0 -31 V
4894 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
4985 576 M
0 3923 V
stroke
LTb
4985 576 M
0 63 V
0 3860 R
0 -63 V
stroke
4985 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1e-05)]
] -60.0 MCshow
1.000 UL
LTb
5270 576 M
0 31 V
0 3892 R
0 -31 V
5646 576 M
0 31 V
0 3892 R
0 -31 V
5839 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
5930 576 M
0 3923 V
stroke
LTb
5930 576 M
0 63 V
0 3860 R
0 -63 V
stroke
5930 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.0001)]
] -60.0 MCshow
1.000 UL
LTb
6215 576 M
0 31 V
0 3892 R
0 -31 V
6591 576 M
0 31 V
0 3892 R
0 -31 V
6783 576 M
0 31 V
0 3892 R
0 -31 V
stroke
LTa
6875 576 M
0 3923 V
stroke
LTb
6875 576 M
0 63 V
0 3860 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.001)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1206 4499 N
0 -3923 V
5669 0 V
0 3923 V
-5669 0 V
Z stroke
LCb setrgbcolor
144 2537 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Min )]
[(Symbol) 180.0 0.0 true true 0 (t)]
] -60.0 MCshow
grestore
LTb
LCb setrgbcolor
4040 126 M
[ [(Symbol) 180.0 0.0 true true 0 (f)]
] -60.0 MCshow
LTb
4040 4769 M
[ [(Helvetica) 180.0 0.0 true true 0 (Minimum )]
[(Symbol) 180.0 0.0 true true 0 (t)]
[(Helvetica) 180.0 0.0 true true 0 ( for which hot edge coverage is 100%)]
] -60.0 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
2394 4346 M
[ [(Helvetica) 180.0 0.0 true true 0 (  firefox)]
] -60.0 MRshow
LT0
1.00 0.00 0.00 C 2502 4346 M
495 0 V
3584 153 R
6296 4331 L
6012 4134 L
5728 3937 L
5443 3740 L
5159 3543 L
4874 3347 L
4590 3150 L
4305 2953 L
4021 2756 L
3737 2559 L
3452 2362 L
3168 2164 L
2883 1967 L
2599 1762 L
2314 1565 L
1746 1138 L
6581 4499 Pls
6296 4331 Pls
6012 4134 Pls
5728 3937 Pls
5443 3740 Pls
5159 3543 Pls
4874 3347 Pls
4590 3150 Pls
4305 2953 Pls
4021 2756 Pls
3737 2559 Pls
3452 2362 Pls
3168 2164 Pls
2883 1967 Pls
2599 1762 Pls
2314 1565 Pls
1746 1138 Pls
2749 4346 Pls
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT1
0.00 0.00 1.00 C LCb setrgbcolor
2394 4166 M
[ [(Helvetica) 180.0 0.0 true true 0 (  oocalc)]
] -60.0 MRshow
LT1
0.00 0.00 1.00 C 2502 4166 M
495 0 V
3584 80 R
6296 4050 L
6012 3853 L
5728 3656 L
5443 3459 L
5159 3262 L
4874 3065 L
4590 2869 L
4305 2672 L
4021 2475 L
3737 2277 L
3452 2080 L
3168 1881 L
2883 1680 L
6581 4246 Crs
6296 4050 Crs
6012 3853 Crs
5728 3656 Crs
5443 3459 Crs
5159 3262 Crs
4874 3065 Crs
4590 2869 Crs
4305 2672 Crs
4021 2475 Crs
3737 2277 Crs
3452 2080 Crs
3168 1881 Crs
2883 1680 Crs
2749 4166 Crs
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT2
1.00 0.00 1.00 C LCb setrgbcolor
2394 3986 M
[ [(Helvetica) 180.0 0.0 true true 0 (  amarok)]
] -60.0 MRshow
LT2
1.00 0.00 1.00 C 2502 3986 M
495 0 V
3584 178 R
6296 3967 L
6012 3770 L
5728 3573 L
5443 3377 L
5159 3180 L
4874 2983 L
4590 2786 L
4305 2589 L
4021 2392 L
3737 2195 L
3452 1998 L
3168 1802 L
2883 1605 L
2599 1403 L
2314 1196 L
1746 759 L
6581 4164 Star
6296 3967 Star
6012 3770 Star
5728 3573 Star
5443 3377 Star
5159 3180 Star
4874 2983 Star
4590 2786 Star
4305 2589 Star
4021 2392 Star
3737 2195 Star
3452 1998 Star
3168 1802 Star
2883 1605 Star
2599 1403 Star
2314 1196 Star
1746 759 Star
2749 3986 Star
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LT3
0.00 1.00 0.50 C LCb setrgbcolor
2394 3806 M
[ [(Helvetica) 180.0 0.0 true true 0 (  ark)]
] -60.0 MRshow
LT3
0.00 1.00 0.50 C 2502 3806 M
495 0 V
3584 95 R
6296 3705 L
6012 3508 L
5728 3311 L
5443 3114 L
5159 2917 L
4874 2720 L
4590 2523 L
4305 2326 L
4021 2129 L
3737 1932 L
3452 1732 L
3168 1530 L
2883 1322 L
2599 1125 L
2314 928 L
6581 3901 Box
6296 3705 Box
6012 3508 Box
5728 3311 Box
5443 3114 Box
5159 2917 Box
4874 2720 Box
4590 2523 Box
4305 2326 Box
4021 2129 Box
3737 1932 Box
3452 1732 Box
3168 1530 Box
2883 1322 Box
2599 1125 Box
2314 928 Box
2749 3806 Box
% End plot #4
% Begin plot #5
1.000 UP
2.000 UL
LT4
0.00 0.81 0.82 C LCb setrgbcolor
2394 3626 M
[ [(Helvetica) 180.0 0.0 true true 0 (  inkscape)]
] -60.0 MRshow
LT4
0.00 0.81 0.82 C 2502 3626 M
495 0 V
3584 29 R
6296 3458 L
6012 3262 L
5728 3065 L
5443 2868 L
5159 2671 L
4874 2474 L
4590 2277 L
4305 2081 L
4021 1884 L
3737 1687 L
3452 1490 L
3168 1291 L
2883 1095 L
6581 3655 BoxF
6296 3458 BoxF
6012 3262 BoxF
5728 3065 BoxF
5443 2868 BoxF
5159 2671 BoxF
4874 2474 BoxF
4590 2277 BoxF
4305 2081 BoxF
4021 1884 BoxF
3737 1687 BoxF
3452 1490 BoxF
3168 1291 BoxF
2883 1095 BoxF
2749 3626 BoxF
% End plot #5
1.000 UL
LTb
1206 4499 N
0 -3923 V
5669 0 V
0 3923 V
-5669 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
